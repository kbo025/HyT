
source aavvListReservation_delta : base
{
    sql_query  =\
            select\
                r.id,\
                p.name,\
                rg.aavv_id as aavvId,\
                (select\
                        title\
                    from\
                        location\
                    where\
                        id = idDestinyProperty(l.city_id,l.parent_id, l.id)) as destiny,\
                r.public_id as publicId,\
                extract(epoch from r.reservation_date::timestamptz  at time zone 'utc') as createDate,\
                extract(epoch from r.date_check_in  at time zone 'utc') as checkIn,\
                extract(epoch from r.date_check_out  at time zone 'utc') as checkOut,\
                cp.full_name as fullName,\
                r.total_to_pay as price,\
                r.status\
            from\
            	property as p,\
            	location as l,\
            	cliente_profile as cp,\
            	reservation as r,\
            	reservation_group as rg\
            where\
            	p.id = r.property_id and\
            	p.location = l.id and\
            	r.client_id = cp.id and\
            	r.aavv_reservation_group_id = rg.id and\
            	extract(epoch from r.reservation_date::timestamptz )   >= \
            	    (select\
            	        last_update\
            	    FROM\
            	        sphinx_index_meta as sm\
                    WHERE\
                        sm.index_name = 'aavvListReservation');

    sql_field_string = name
    sql_attr_bigint = aavvId
    sql_field_string = destiny
    sql_field_string = publicId
    sql_attr_bigint = createDate
    sql_attr_bigint = checkIn
    sql_attr_bigint = checkOut
    sql_field_string = fullName
    sql_attr_float = price
    sql_field_string = status
}

source dailyRoom_delta : base
{
	sql_query  =\
        select\
            dailyRoom.id as idDailyRoom,\
            extract(epoch from dailyRoom.date  at time zone 'utc') as date,\
            property.id as idProperty,\
            dailyRoom.cut_off as cutOff,\
            dailyRoom.availability as availability,\
            continuousRoomAvailability(room.id, dailyRoom.date) as continuousRoomAvailability,\
            room.id as idRoom\
        from\
            daily_room as dailyRoom,\
            property,\
            room\
        where\
            property.id = room.property_id and\
            room.id = dailyRoom.room_id and\
            dailyRoom.date >= CURRENT_DATE and\
            dailyRoom.availability > 0 and\
            dailyRoom.stop_sell = 'f' and\
            serviceAvailability(room.id, dailyRoom.date) > 0 and\
            room.id in\
            (\
                (select\
                    room.id as idRoom\
                from\
                    daily_room as dailyRoom,\
                    property,\
                    room\
                where\
                    property.id = room.property_id and\
                    room.id = dailyRoom.room_id and\
                    room.is_active = 't' and\
                    dailyRoom.date >= CURRENT_DATE and\
                    property.active = 't' and\
                    extract(epoch from dailyRoom.last_modified::timestamptz ) >= \
                    (select\
                        last_update\
                    from\
                        sphinx_index_meta as sm\
                    where\
                        sm.index_name = 'dailyRoom')\
                    group by idRoom)\
            union \
                (select\
                    dd.parent_id\
                from \
                    drop_daily dd\
                where\
                    dd.type = 'dailyRoom'\
                group by dd.id));

	sql_query_killlist =\
        select\
            daily_id\
        from\
            drop_daily\
        where\
            type = 'dailyRoom'\
    union\
        select\
            dailyRoom.id\
        from\
            daily_room as dailyRoom,\
            property,\
            room\
        where\
            property.id = room.property_id and\
            room.id = dailyRoom.room_id and\
            dailyRoom.date >= CURRENT_DATE and\
            (dailyRoom.availability <= 0 or\
            dailyRoom.stop_sell = 't' or\
            serviceAvailability(room.id, dailyRoom.date) <= 0);

    sql_query_post = \
		UPDATE\
		    sphinx_index_meta\
		SET\
		    last_update = extract(epoch FROM now()::timestamptz)\
		WHERE\
            index_name ='dailyRoom';

    sql_query_post = \
		DELETE FROM\
		    drop_daily\
		WHERE\
            type ='dailyRoom';

    sql_attr_bigint = date
    sql_attr_bigint = cutOff
    sql_attr_bigint = availability
    sql_attr_bigint = continuousRoomAvailability
    sql_attr_bigint = idRoom
}


source dailyPack_delta : base
{
	sql_query  =\
	    select\
            dailyPack.id as idDailyPack,\
            extract(epoch from dailyPack.date  at time zone 'utc') as date,\
            dailyPack.sell_rate as sellRate,\
            dailyPack.closed_to_arrival as cta,\
            dailyPack.closed_to_departure as ctd,\
            dailyPack.close_out as closeOut,\
            dailyPack.max_night as maxNight,\
            dailyPack.min_night as minNight,\
            dailyPack.promotion as promotion,\
            dailyPack.specific_availability as specificAvailability,\
            continuousPackAvailability(pack.id, dailyPack.date) as continuousPackAvailability,\
            pack.id as idPack\
        from\
            daily_pack as dailyPack,\
            pack,\
            room,\
            property\
        where\
            property.id = room.property_id and\
            room.id = pack.room_id and\
            room.is_active = 't' and\
            pack.id = dailyPack.pack_id and\
            dailyPack.date >= CURRENT_DATE and\
            dailyPack.specific_availability > 0 and\
            property.active = 't' and\
            dailyPack.is_completed = 't' and\
            pack.id in\
            (\
                (select\
                    pack.id as idPack\
                from\
                    daily_pack as dailyPack,\
                    pack,\
                    room,\
                    property\
                where\
                    property.id = room.property_id and\
                    room.id = pack.room_id and\
                    room.is_active = 't' and\
                    pack.id = dailyPack.pack_id and\
                    dailyPack.date >= CURRENT_DATE and\
                    property.active = 't' and\
                    dailyPack.is_completed = 't' and\
                    extract(epoch from dailyPack.last_modified::timestamptz ) >=\
                    (select\
                        last_update\
                    from\
                        sphinx_index_meta as sm\
                    where\
                        sm.index_name = 'dailyPack')\
                    group by idPack)\
            union\
                    (select\
                        dd.parent_id\
                    from\
                        drop_daily dd\
                    where\
                        dd.type = 'dailyPack'\
                    group by dd.id)\
            );

    sql_query_killlist =\
        select\
            daily_id\
        from\
            drop_daily\
        where\
            type = 'dailyPack'\
    union\
        select\
            dailyPack.id\
        from\
            daily_pack as dailyPack,\
            pack,\
            room,\
            property\
        where\
            property.id = room.property_id and\
            room.id = pack.room_id and\
            room.is_active = 't' and\
            pack.id = dailyPack.pack_id and\
            dailyPack.date >= CURRENT_DATE and\
            (dailyPack.specific_availability <= 0 or\
            property.active = 'f' or\
            dailyPack.is_completed = 'f');

    sql_query_post = \
		UPDATE\
		    sphinx_index_meta\
		SET\
		    last_update = extract(epoch FROM now()::timestamptz)\
		WHERE\
            index_name ='dailyPack';

    sql_query_post = \
		DELETE FROM\
		    drop_daily\
		WHERE\
            type ='dailyPack';

    sql_attr_bigint = date
    sql_attr_float = sellRate
    sql_field_string = cta
    sql_field_string = ctd
    sql_field_string = closeOut
    sql_attr_bigint = minNight
    sql_attr_bigint = maxNight
    sql_attr_bigint = specificAvailability
    sql_attr_bigint = continuousPackAvailability
    sql_attr_bigint = idPack
}

<?php

    echo "
        index aavvListReservation_delta
        {
            source   = aavvListReservation_delta
            path   =  $indexPath/aavvListReservationDelta
        }";
?>

<?php

    echo "
        index dailyRoom_delta
        {
            source   = dailyRoom_delta
            path   =  $indexPath/dailyRoomDelta
        }";
?>

<?php

    echo "
        index dailyPack_delta
        {
            source   = dailyPack_delta
            path   =  $indexPath/dailyPackDelta
        }";
?>
